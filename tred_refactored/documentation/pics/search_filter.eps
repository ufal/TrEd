%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/search_filter.eps)
%%CreationDate: (Tue Oct 14 10:59:58 2008)
%%BoundingBox: 0 0 26 26
%%HiResBoundingBox: 0 0 25.6002 26
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 26 26
userdict begin
DisplayImage
0 0
25.6002 25.6002
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffff5656579898999D9E9E
98989A919293ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff3B3B3B979799B1B2B3BEC0C1C3C4C6BCBEBFB3B5B6
9FA0A1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff515253929393BBBDC0EFF2F6FAFCFEFDFDFFFDFDFFE8E9EBB9BBBDA3A4A5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
858585B9BBBEF0F4FCF3F8FDF7F9FDF9FBFDFAFCFEFBFCFEF2F6F8B6B8B9909192ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff4444459A9B9DE1E8F2
E8EEFAEAF0FAE8F1FAEBF2FBEDF2FBF2F7FCF5F8FDD5D9DCA2A3A4ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff696A6AAFB1B3E1EBF9E1ECF9E4EEF9
E5EFF9E6EEFAE7F0FAE8EFFAEAF1FAECF1F9ADAEB0000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffff717272B6B9BBDDE8F8DEE9F8DFEAF8E0ECF8E2EDF9
E3ECF9E4EDF9E5EFF8E8EEFAAEAEB1000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffff555657B7B9BAD8E6F7D9E6F7DCE6F7DCE7F8DDE8F8DEEBF8E0EAF8
E1EBF9E1E8F3A7A8AA000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000A0A1A3DAE4F2D6E3F6D6E4F6D7E5F7D7E6F7DBE7F7DBE6F7DCE9F8CED0D7
8C8C8Dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
707172C6C8CBD5E4F6D1E1F5D3E2F6D3E2F6D5E4F6D6E4F6DAE2EDB0B1B14E4F50ffffff
ffffffffffffffffffffffffffffff2C2C2C727272A5A5A58F8F8F8181817A7A7A6A6A6A
6060615656589EA9B6D2E1F5D8E4F5D9DEE6B8B9BA6A6A6Bffffffffffffffffffffffff
ffffffffffff3636367878789696968D8D8D6767673B3B3B3030303434343535355E5E5E
565858535354BCBDBF959698ACACADBABABA7E7E7Effffffffffffffffffffffffffffff
ffffff7A7A7A7E7E7E7D7D7D9E9E9E8F8F8F6E6E6E565656585858545454313131000000
000000ffffff656565B2B2B2B2B2B2ffffffffffffffffffffffffffffffffffff434343
9B9B9BC1C1C1EFEFEFFAFAFAEBEBEBBDBDBDBABABA757575131313ffffffffffffffffff
3E3E3E686868DDDDDDA2A2A2ffffffffffffffffffffffffffffffffffff5050509D9D9D
E2E2E2F7F7F7E9E9E9BDBDBD8C8C8C323232ffffffffffffffffffffffff2B2B2B606060
717171DEDEDE7E7E7Effffffffffffffffffffffffffffffffffff4F4F4FA7A7A7EAEAEA
E0E0E0969696424242ffffffffffffffffffffffffffffffffffff393939808080BCBCBC
C9C9C9ffffffffffffffffffffffffffffffffffffffffff4A4A4ADFDFDFC9C9C9545454
ffffffffffffffffffffffffffffffffffffffffffffffff616161575757E2E2E29B9B9B
ffffffffffffffffffffffffffffffffffff434343E4E4E4C3C3C3545454ffffffffffff
ffffffffffffffffffffffffffffffffffff3232328C8C8C848484E3E3E3707070ffffff
ffffffffffffffffffffffff3F3F3FE5E5E5C3C3C3555555ffffffffffffffffffffffff
ffffffffffffffffffffffffffffff545454979797BBBBBBB3B3B3ffffffffffffffffff
ffffffffffff3B3B3BE5E5E5C3C3C3565656ffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000008D8D8D7C7C7CD0D0D0919191ffffffffffffffffffffffff
383838E4E4E4C3C3C3585858ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff3E3E3EAFAFAF8A8A8AB0B0B0ffffffffffffffffffffffff2E2E2EC3C3C3
9898984A4A4Affffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff6E6E6E727272565656
end
%%PageTrailer
%%Trailer
%%EOF
