# -*- cperl-*-

# This file is included by default in tred.mac and serves only as a
# wrapper for other contributed macro packages inclusions

# define pdt10 if you wish to include PDT1.0-specific macros

#define sdt
#define cac
#define pdt10_a
#define pdt10_t
#define tfa
#define transf
#define voice_control

#ifdef SDT
#undefine sdt
#define PDT10
#endif

#ifdef CAC
#undefine cac
#define PDT10
#endif

#ifdef PDT10
#undefine pdt10_a
#undefine pdt10_t
#undefine tfa
#endif

#ifdef TFA
#undefine tfa
#endif

#ifdef TRANSF
#undefine transf
#endif

#ifdef VOICE_CONTROL
#undefine voice_control
#endif


#include "<*/contrib.mac>"

package TredMacro;

# ------------------------------------
# try guessing proper initial context
# ------------------------------------

#ifdef TRED

#
# @TredMacro::AUTO_CONTEXT_GUESSING
#
# contributed macro packages may push their custom context guessing
# functions into this variable. The function must return name of the
# context to switch to or undef.
#

sub file_opened_hook {
    my ($mode)= GetPatternsByPrefix('mode',STYLESHEET_FROM_FILE());
    return unless $grp->{FSFile};
    foreach my $sub (@TredMacro::AUTO_CONTEXT_GUESSING) {
      my $ret = &$sub;
      if (defined($ret)) {
	return SwitchContext($ret);
      }
    }
    if (defined($mode)) {
      return SwitchContext($mode);
#ifdef pml
    } elsif (PML::SchemaName() eq 'tdata') {
      return SwitchContext('PML_T_View');
    } elsif (PML::SchemaName() eq 'adata') {
      return SwitchContext('PML_A_View');
    } elsif (PML::SchemaName() eq 'aeditdata') {
      return SwitchContext('PML_A_Edit');
    } elsif (PML::SchemaName() eq 'mdata') {
      return SwitchContext('PML_M');
#endif pml
#ifdef transf
    } elsif ($grp->{FSFile}->FS->exists->{x_TNT}
	     and $grp->{FSFile}->FS->hide eq 'X_hide') {
      return SwitchContext('Transfer');
#endif transf
#ifdef cac
    } elsif ($grp->{FSFile}->FS->exists->{x_origt} and
	     $grp->{FSFile}->FS->exists->{x_origa}) {
      return SwitchContext('AcademicTreebank');
#endif cac
#ifdef pdt10_t
    } elsif ($grp->{FSFile}->FS->hide eq 'TR') {
      return SwitchContext('Tectogrammatic') 
	unless (CurrentContext() eq 'TR_Correction' or
		CurrentContext() eq 'TFA');
#endif pdt10_t
#ifdef pdt10_a
    } elsif($grp->{FSFile}->FS->exists->{afun}) {
      return SwitchContext('Analytic') unless CurrentContext() eq 'Analytic_Correction';
#endif pdt10_a
    } 
}

sub file_resumed_hook {
  &file_opened_hook;
}

#endif TRED
