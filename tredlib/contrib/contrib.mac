# -*- cperl-*-

=pod

=head1 NAME

contrib/contrib.mac - a file responsible for loading other macro files

=head2 DESCRIPTION

This file is included by default in tred.mac and serves as a wrapper
for other contributed macro package inclusions.

Besides it provides file_opened_hook and file_resumed_hook in the
package TredMacros. These hooks should not be overriden by other macro
packages. See below how to plug context-specific code in.

=cut

#include "<*/contrib.mac>"

package TredMacro;


=pod

=head2 @TredMacro::AUTO_CONTEXT_GUESSING

This global variable can be used by contributed TrEd macro packages to
plug-in their custom context guessing functions.  The purpose of such
a function is to detect whether the current file is suitable for the
macro package and if so, to indicate the correct binding context.

The function must return name of the context to switch to or undef if
the current file does not suit.

The synopsis for a package named 'Foo' is as follows:

  #binding-context Foo
  package Foo;
  import TredMacro;

  push @TredMacro::AUTO_CONTEXT_GUESSING, sub {
    my ($hook)=@_;
    if (PML::SchemaName() eq 'foo-data') { # some test that the file suites the macro package
      if ($hook eq 'file_opened_hook') {
         # some open-specific code
      } elsif ($hook eq 'file_resumed_hook') {
         # some resume-specific code
      }
      return 'Foo'; # return name of the macro package (context) to use
    }
    return;
  };

=cut

# ------------------------------------
# try guessing proper initial context
# ------------------------------------

#ifdef TRED

sub file_opened_hook {
  __guess_context('file_opened_hook',@_)
}
sub file_resumed_hook {
  __guess_context('file_resumed_hook',@_)
}
sub __guess_context {
  my ($hook)=@_;
  my ($mode)= GetPatternsByPrefix('mode',STYLESHEET_FROM_FILE());
  return unless $grp->{FSFile};
  foreach my $sub (@TredMacro::AUTO_CONTEXT_GUESSING) {
    my $ret = &$sub;
    if (defined($ret)) {
      return SwitchContext($ret);
    }
  }
  if (defined($mode)) {
    return SwitchContext($mode);
  }
}

#endif TRED
