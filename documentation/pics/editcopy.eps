%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/editcopy.eps)
%%CreationDate: (Tue Oct 14 10:59:48 2008)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 21.9973 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
21.9973 21.9973
12.000000
22 22
0
0
ffffffD4D4DCD4D4DCD4D4DCD4D4DCD4D4DCD4D4DCD4D4DCD4D4DCA3A3AFffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffD4D4DC
FFFFFFFFFFFFFFFFFFFBFBFDF7F7FBECECF0EEEEF2D4D4DCA3A3AFffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffD4D4DCFFFFFFFFFFFF
FFFFFFFEFEFEFAFAFCEEEEF2EEEEF2D4D4DCD7D7DDA3A3AFffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffD4D4DCFFFFFFFFFFFFFFFFFFFEFEFE
FBFBFDF1F1F5EEEEF2A3A3AFA3A3AFA3A3AFA3A3AFffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffD4D4DCFFFFFFFFFFFFFFFFFFFEFEFEFBFBFDF3F3F7
EEEEF2E9E9EDDBDBE1CECED6A3A3AFffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffD4D4DCFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEF4F4F8F0F0F4DEDEE4
D2D2DAD0D0D8A3A3AFffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffD4D4DCFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEF5F5F7EEEEF2D4D4DCD4D4DCD4D4DC
D4D4DCD4D4DCD4D4DCD4D4DCD4D4DCA3A3AFffffffffffffffffffffffffffffffD4D4DC
FFFFFFFFFFFFFFFFFFFBFBFDF7F7FBEAEAEEE3E3E9D4D4DCFFFFFFFFFFFFFFFFFFFBFBFD
F7F7FBECECF0EEEEF2D4D4DCA3A3AFffffffffffffffffffffffffD4D4DCFFFFFFFFFFFF
FEFEFEF9F9FBF0F0F4E9E9EDE8E8ECD4D4DCFFFFFFFFFFFFFFFFFFFEFEFEFAFAFCEEEEF2
EEEEF2D4D4DCD7D7DDA3A3AFffffffffffffffffffD4D4DCFFFFFFFFFFFFFBFBFDF2F2F6
F0F0F4EDEDF1EBEBEFD4D4DCFFFFFFFFFFFFFFFFFFFEFEFEFBFBFDF1F1F5EEEEF2A3A3AF
A3A3AFA3A3AFA3A3AFffffffffffffD4D4DCFFFFFFFEFEFEF6F6F8F3F3F7F1F1F5EEEEF2
EDEDF1D4D4DCFFFFFFFFFFFFFFFFFFFEFEFEFBFBFDF3F3F7EEEEF2E9E9EDDBDBE1CECED6
A3A3AFffffffffffffD4D4DCFFFFFFFCFCFEF5F5F7F3F3F7F1F1F5EEEEF2EDEDF1D4D4DC
FFFFFFFFFFFFFFFFFFFFFFFFFEFEFEF4F4F8F0F0F4DEDEE4D2D2DAD0D0D8A3A3AFffffff
ffffffD4D4DCFFFFFFF7F7FBF5F5F7F3F3F7F2F2F6F0F0F4EDEDF1D4D4DCFFFFFFFFFFFF
FFFFFFFFFFFFFEFEFEF5F5F7EEEEF2D9D9E1D6D6DCD4D4DCA3A3AFffffffffffffD4D4DC
FFFFFFF5F5F7F4F4F8F2F2F6F1F1F5EEEEF2EDEDF1D4D4DCFFFFFFFFFFFFFFFFFFFBFBFD
F7F7FBEAEAEEE3E3E9E0E0E6DFDFE5DBDBE3A3A3AFffffffffffffD4D4DCFEFEFEF5F5F7
F5F5F7F3F3F7F1F1F5EEEEF2EDEDF1D4D4DCFFFFFFFFFFFFFEFEFEF9F9FBF0F0F4E9E9ED
E8E8ECE3E3E9E2E2E8E0E0E6A3A3AFffffffffffffA3A3AFA3A3AFA3A3AFA3A3AFA3A3AF
A3A3AFA3A3AFA3A3AFD4D4DCFFFFFFFFFFFFFBFBFDF2F2F6F0F0F4EDEDF1EBEBEFE8E8EC
E4E4EAE3E3E9A3A3AFffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffD4D4DCFFFFFFFEFEFEF6F6F8F3F3F7F1F1F5EEEEF2EDEDF1E9E9EDE6E6ECE3E3E9
A3A3AFffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffD4D4DC
FFFFFFFCFCFEF5F5F7F3F3F7F1F1F5EEEEF2EDEDF1EAEAEEE8E8ECE4E4EAA3A3AFffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffD4D4DCFFFFFFF7F7FB
F5F5F7F3F3F7F2F2F6F0F0F4EDEDF1EAEAEEE8E8ECE4E4EAA3A3AFffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffD4D4DCFFFFFFF5F5F7F4F4F8F2F2F6
F1F1F5EEEEF2EDEDF1E9E9EDE8E8ECE4E4EAA3A3AFffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffD4D4DCFEFEFEF5F5F7F5F5F7F3F3F7F1F1F5EEEEF2
EDEDF1EAEAEEE8E8ECE4E4EAA3A3AFffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffA3A3AFA3A3AFA3A3AFA3A3AFA3A3AFA3A3AFA3A3AFA3A3AFA3A3AF
A3A3AFA3A3AFA3A3AFffffff
end
%%PageTrailer
%%Trailer
%%EOF
