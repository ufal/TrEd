%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/view_remove.eps)
%%CreationDate: (Tue Oct 14 11:00:01 2008)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 21.9973 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
21.9973 21.9973
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3995E5449DE8
4BA0EA479BE74395E53F8FE23A89E03683DD327DDB2D77D82971D6246BD32065D11B5FCE
1759CC1253C90E4DC70A47C40742C2053FBF0238B20032A4449DE88BCFFF84C9FF7DC1FF
75BAFF6DB2FF65AAFF5DA1FF5499FF4B90FF4287FF397FFF3076FF276DFF1E64FF155BFF
0C52FF044AFF0349FF0349FF0340F10032AB4DA3EC84C8FF7EC2FF77BBFF70B4FF68ADFF
60A5FF589DFF5095FF488DFF3F84FF367BFF2D73FF246AFF1C61FF1358FF0A4FFF0349FF
0349FF0349FF0343F60132B15BA8EBBFE1FFBCDEFFB9DBFFB5D7FFB1D4FFAED0FFAACCFF
A6C8FFA2C4FF9DC0FF99BCFF95B8FF90B3FF8CAFFF87AAFF82A5FE7FA2FE7EA1FD7DA0FD
7A9AF51D48B36AAFEBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFDFDFEFBFBFCF9F9FBF7F7FAF6F6F9F0EFF4385EB5
69AEEAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFFFDFDFEFBFBFCF9F9FBF7F7FAF6F6F9F4F4F8EEEDF3385DB469ACE9FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFDFDFE
FBFBFDF9F9FBF7F7FAF6F6F9F4F4F8F2F2F7ECEBF2375CB468AAE8FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFDFDFEFBFBFDF9F9FBF7F7FA
F6F6F9F4F4F8F2F2F7F1F1F6E9E9F0365BB367A9E7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFDFDFEFBFBFDF9F9FBF8F8FBF6F6F9F4F4F8F3F3F7
F1F1F6EFEFF5E7E7EE355AB266A7E6FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFDFDFEFBFBFDF9F9FCF8F8FBF6F6F9F4F4F8F3F3F7F1F1F6EFEFF5EDEDF4
E5E5ED3459B265A6E5FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFDFE
FBFBFDF9F9FCF8F8FBF6F6F9F4F4F8F3F3F7F1F1F6EFEFF5EDEDF4ECECF3E6CBCC3358B1
64A5E4FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFDFEFBFBFDF9F9FCF8F8FB
F6F6FAFDC2AFFCC6B6F1F1F6EFEFF5EDEDF4ECECF3EDC4C1FF5737F8634D63A3E3FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFDFEFBFBFDF9F9FCF8F8FBF6F6FAFCCBBCFFAD93
FFA285FFA78EEDEDF4ECECF3EFC8C5FF5737FF4729FF371B62A2E2FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFDFDFEFBFBFDFAFAFCF8F8FBF6F6FAF4F4F9F3F3F7FFA88DFF9374FF8565
FC8E73F3BAB3FF5737FF4729FF371BE99F9E62A0E1FFFFFFFFFFFFFFFFFFFFFFFFFDFDFE
FBFBFDFAFAFCF8F8FBF6F6FAF4F4F9F3F3F7F1F1F6EFEFF5FE8C6EFF7755FF6745FF5737
FF4729FF371BEFA5A23257B0619FE1FFFFFFFFFFFFFFFFFFFDFDFEFBFBFDFAFAFCF8F8FB
F6F6FAF4F4F9F3F3F7F1F1F7EFEFF5EEEEF4ECECF3FE7050FF5737FF4729FF371BF59A93
DBDBE63257B0609DDFFFFFFFFFFFFFFDFDFEFBFBFDFAFAFCF8F8FBF6F6FAF4F4F9F3F3F8
F1F1F7EFEFF5EEEEF4ECECF3F2D0CDFF5737FF4729FF371BFF2810FC4033DAD9E63257B0
5E9ADEFAFAFBF9F9FAF7F6F9F5F4F7F2F2F6F1F0F5EFEEF3EDECF2EBEAF1E9E8EFE7E6EE
E4E4EDF0CDCAFF5737FF4729FF371BFE351FFF1806FF0A00FC2D2E3257B0357FD45791D7
548CD45188D14E83CE4B7ECA487AC74575C44271C1406CBE3D68BB3A63B8A897B4FF5737
FF4729FF371BDF9FA4586EB5FE1910FF0000FF0000FB2D2Effffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffFD755CFF4729FF371BF9ABA4
ffffffffffffF4C5C9FE0F0FFF0000FF0000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffFD5B45F9ACA4ffffffffffffffffff
ffffffF0C2C8FE0F0FF39498
end
%%PageTrailer
%%Trailer
%%EOF
