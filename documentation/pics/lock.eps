%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/lock.eps)
%%CreationDate: (Tue Oct 14 10:59:53 2008)
%%BoundingBox: 0 0 21 21
%%HiResBoundingBox: 0 0 21.1326 21
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 21 21
userdict begin
DisplayImage
0 0
21.1326 21.1326
12.000000
22 22
0
0
ffffffffffff006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9C
006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9Cffffffffffffffffffffffff
0073A9016D9D3B8BB15796B95595B95494B85393B65091B54E90B44B8FB4498FB2448CB3
448CB1418AB14089B02A7FAA006C9C0075AAffffffffffff006C9C0073A92C88B38CB4CE
72ACCB4E9DC24399BE4198BF3F99BF4297BE4B97BF5298BF5597BD5B99BF5D99BF619ABF
679BC0749FC26B9BBF1B7EAD0075AA006C9C006C9C016D9D8CB4CE2C8FB80076AA0078AB
007AAD0078AD0074AB0070A8006FA70873A91779AB2B81B13886B5438AB7498DB84F90B9
6698BF6498BC006C9C006C9C006C9C3B8BB172ACCB0076AA007CAD007EAF007BAE007CAF
3D9AC3DBEFFAFFFFFFFDFFFFCCE5F2589BC33E86B44A8DB85391BA5793BB6095BC6D9CC0
1D78A7006C9C006C9C5796B94E9DC20078AB007EAF007DAF0078AC61AED0FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF7AADCC4A8BB65793BB5E94BC6597BD6B9ABF287DAB006C9C
006C9C5595B94399BE007AAD007EB0007BAF1485B5FFFFFFFFFFFFA4CEE64391BC599CC3
CFE2EDFFFFFFE0EEF75590BA5B92BB6497BD6B9BBD6A99BF247CA9006C9C006C9C5494B8
4198BF007AAE017FB10579AE6DB1D2FFFFFFDCECF5207AAD3483B33B84B33F87B4F8FCFF
FFFFFF75A4C65F93BB699ABD719DC06A9BBF1F7AA8006C9C006C9C5393B63F99BF007CAF
0E80B2117AAE99C9E3FFFFFF8FBDD9297CAE3D86B44489B53B80B0CCE2F1FFFFFF92B8D3
6396BA6E9CBF779EBF6A9AC01979A8006C9C006C9C5091B54297BE077CB01C80B21B7AAD
4998C05CA1C764A4C874ACCF7DB0D083B2D280B0CF7DABCD81AECC76A4C56394BA729CBF
7DA2C3699CC11376A7006C9C006C9C4E90B44B97BF157FB1207FB165A9CDFCFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1F6FB7FA7C7729CC081A6C5689DC1
0E75A6006C9C006C9C4B8FB45298BF2382B3247FAFA0C7DBFFFFFFEAF3F8CDDFEAD5E4EE
D7E4EED9E5EED9E5EED5E3EDF3F6F9FFFFFFB7D0E3769EC089ABC7659EC20573A5006C9C
006C9C498FB25597BD2A85B22980B19FC4DAFFFFFF99C3DF337CAD4587B34B87B5528BB6
588DB5548AB4BDD1E1FFFFFFB4CFE277A0C18FADC9639EC30072A3006C9C006C9C448CB3
5B99BF3487B53281B2A3C5DBFFFFFFA6CBE24A8AB55F95BC6497BD6B9ABE6E9CBF6795BA
C7D7E6FFFFFFB9D1E37EA3C395B1CD5CA1C40070A2006C9C006C9C448CB15D99BF3A88B6
3983B3A6C8DCFFFFFF9FC5DE407FAE5189B4578DB45C8FB66090B65F8DB6C1D4E3FFFFFF
BCD3E483A7C79BB6CF5DA3C5006EA2006C9C006C9C418AB1619ABF438AB74288B4A9C9DD
FFFFFFF7FCFFE7F5FDEEF8FFF0F9FFF0FAFFF1FAFFEEF7FEFDFFFFFFFFFFBED4E48AADC9
A2BAD360A5C6006EA0006C9C006C9C4089B0679BC0498DB84C8DB782B1D0FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FCFF9FBDD692B3CDA9BFD55AA3C5
006FA1006C9C006C9C297FAA749FC24F90B95491BA5790BA70A0C478A3C47AA5C580A6C6
84A8C888ADC98BAFCB91B2CD97B7D099B8D290B1CD9EBAD2B1C5D83996BC006E9F006C9C
006C9C006C9C6B9BBF6698BF5F95BC6496BD6899BC6D9ABE729BBD789FC17DA3C485A8C6
8BAAC891AFCB98B3CEA0B9D2A8BFD5B1C5D881B4CE077EAD006A9A006C9C006C9C0075AA
1B7EAD6498BC6D9CC06B9ABF6A99BF6A9BBF6A9AC0699CC1689DC1659EC2639EC35CA1C4
5DA3C560A5C65AA3C53996BC077EAD0073A60076AB006C9Cffffffffffff0075AA006C9C
1D78A7287DAB247CA91F7AA81979A81376A70E75A60573A50072A30070A2006EA2006EA0
006FA1006E9F006A9A0076ABffffffffffffffffffffffff006C9C006C9C006C9C006C9C
006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9C006C9C
006C9C006C9Cffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
