%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/eraser.eps)
%%CreationDate: (Mon Jul 27 13:29:23 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
804F19000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff0000004E3214D29665F1D0C0CE946D
673F1C000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000905631E0B196FACDC4FCCFC0FBC4BDE1AF99A0613C
21140Cffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0000002B1B13AE7557EBBAABFBC0AFF5BBA8F5ACA2FBAA9CFBAD96F2A090B97B5D723F28
000000ffffffffffffffffffffffffffffffffffffffffffffffff0000006B3C2FC29180
F5B5A6FFBB9EF0A795FA9B8CFA9D84F09A7BEC8573F8826BFB7E5FC555377F3A202A150F
ffffffffffffffffffffffffffffff0000001B121086544DDBA89DF8B19DF6AB8BEC7F67
FA6749FF773EDF5C36F14B2DF65524E64D14DC2503F73E1CA540203B2017ffffffffffff
ffffffffffff000000704637B5877BF5B9ABFA976EE65926EE2B01F53700EF4900D92A00
F83000FF4F00D83400ED3208FF5B37FE2F05AE3B193A2219ffffffffffff0000000B0B0B
969595DDD8D6E4B4A7FC4919F73500FC3300FD3A00E13F00E42C00F63A00EE4C00D72E00
FB5E35FF5229FF2D00FF2A00B13D1938241Bffffff000000535353C2C2C2EEEEEED3D2D2
C1C0C0BC998FE3592FFB3B02FB3A02FC3A01FD3901FA3A00E43A0BFF7C5AFF3F0FFF2F00
FF2C00FF2800B3401937261E000000959595E9E9E9F5F5F5CAC9C9C2C1C1C4C3C3C5C4C4
C5C2C1C28B7AEA5626ED430CEE430BF37A54FC6F46FF3500FF3100FF2E00FF2A00F42C05
A14C1E211813151515B2B1B1EAEAEAD5D4D4C9C8C8CBCBCBCDCDCDCECDCDCECDCDCDCCCC
C6BBB7D3927BF1A58BF75525FF3700FF3300FF3000FF2C00D84917A958222D1D10000000
0E0E0EB3B2B2C7C6C6C5C5C5D0D0D0D4D4D4D7D7D7D8D7D7D8D7D7D6D5D5D7D6D6CFCAC9
F15423FD3901FF3500FF3200F93304D16A1F965623000000000000ffffff080808BABABA
CDCCCCB7B6B6BDBCBCDBDADAE0E0E0E1E1E1E0E0E0E5E4E4CBCBCBC7C1BEF74712FF3700
FF3300D84B18BE6922473014000000000000ffffffffffff030303C1C0C0D4D4D4C0C0C0
BCBCBCC2C1C1D9D9D9EBEBEBEBEBEBD6D5D5CDCDCDCBC2C0FC430CF83601B05322945628
000000000000ffffffffffffffffffffffff000000B5B5B5DBDBDBD2D1D1C2C1C1C8C8C8
CECECEE5E5E5E2E1E1DADADAD3D2D2D0C2BFCB461E924A25462F1E000000000000ffffff
ffffffffffffffffffffffff0000002A2A2A969696CCCCCCD1D1D1CDCCCCD4D3D3E8E8E8
E7E7E7DFDFDFD6D5D591878577422F000000000000ffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000606060A6A5A5CBCBCBDADADAECECECECECECCFCECE
7C7C7C262626000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000000D0D0D747474AEAEAEE6E6E6B0B0B0626262000000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff0000000000004848488F8F8F3E3E3E000000000000ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
