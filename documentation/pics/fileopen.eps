%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/fileopen.eps)
%%CreationDate: (Tue Oct 14 10:59:51 2008)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff7781C9757DC87A83CA6D76C5
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff7882C98990D1D7DAF4DCDFF66A74C3ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff7D85CA7A83CABDC0E8F5F5FFEAEAFBEFEFFD979EDA636DC2ffffffffffffffffff
ffffffffffff1F61D76FA1ED6D9FED679CED6298EB5C94EB084BD0ffffff7F88CB9FA4DB
E4E6FAF3F3FFEFEFFEEAEAFBE6E6FAEEEEFD6A74C65B66BFffffffffffffffffffffffff
3D76DECCF5FFC6F1FFBEEEFFB8EAFFB1E5FF96C1F67788D0C9CCEDFDFDFFF8F8FFF2F2FF
EFEFFEEAEAFBE6E6FAE5E5F9C2C8ED455ABF002EC0ffffffffffffffffff3C75DDCCF5FF
C6F1FFBEEEFFB4E4FF97AEE4A3AADCF5F6FFFFFFFFFCFCFFF8F8FFF2F2FFEFEFFEEAEAFB
E6E6FAE3E3F8EEEEFD828BD14358BEffffffffffffffffff3973DCCCF5FFC6F1FFAED0F6
939DD6DFE1F6FFFFFFFFFFFFFFFFFFFCFCFFF8F8FFF2F2FFEFEFFEEAEAFBD5DAF6668ADF
6689DE6184DC1D46C0002FC1002DBF002CBE3670DCCCF5FFC6F1FFA0B8E8CDD2EFFFFFFF
FFFFFFFFFFFFFFFFFFFCFCFFF8F8FFF2F2FFEFEFFEDADFF92057D06493EA86B0F684AEF6
81ABF474A0F16F9CF10029BD336EDCCCF5FFC6F1FFA2D3FE4771D27EA6ED7DA3ED7AA1EA
779EE8759AE77397E66F94E46D90E32258D174A0EF7AB5FF4796FF4594FF4C9CFF1D6BF0
0028CC0028BD306CDBCCF5FFC6F1FF518FE96796E7ACC1F1BDD5FBB3D3FAAACDF9A1C7F9
97BFF88DBAF685B2F689B6FB82BBFF4C99FF4594FF4696FF397DF60732D00026C00027BC
2D6ADACCF5FFC6F1FF0D52D3E7F6FFD4E0FAE3F3FFE1FFFFCCF2FFB8E5FF99CCFF81BBFF
6DABFF599CFF478CFC3377F52964E91039D3001FC80017C90024BD0026BB2966DACCF5FF
85BBF64A7FE1F0FEFFD9F6FFB2D0F1C7EEFFA1D2FF7DB3FF659EFB508AF83976F42462F0
1A52E71142DC0128CB0022CA0015C80019C60024BAffffff2765D9CCF5FF4684E498BAF3
E5FCFFC2EFFF9CD2FF8ABEFC88BDFF73ABFE5F98FB4884F63270F31C5BEE063DDD0133D7
0133D60025CF0015C8001CC00023B8ffffff2562D7BEEAFF195AD4EFFEFFBFEAFFA6DDFF
94D2FF78B1FA79B1FD6CA6FD5792FA427FF62261EE0443E40341E4033BDE0133D60025CF
0015C8001FBC0020B8ffffff2260D77AB1F25788E3D7F2FFCBEEFFBFE5FFB2DAFFA2CAFE
93B8F88FB5F97EA4F5658DED4F78E74571E7436AE04160D73D59D1344FCB1F3CC6001FB7
ffffffffffff1E5DD63A77DFB0C8F6FFFFFFFFFFFFFFFFFFFAFAFFF2F2FDEDEDFAE6E6F6
DFDFF2D9D9EFD3D3EBCBCBE7C6C6E4BEBEE0B8B8DCB2B2D96075CA001EB6ffffffffffff
1353D21A58D2FFFFFFFFFFFFFFFFFFFFFFFFFCFCFFF6F6FFF0F0FBE8E8F8E3E3F4DCDCF1
D5D5EDCFCFE9C8C8E6C1C1E1BCBCDEB4B4DB244AC1001CB5ffffffffffff0039C76A93E6
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9F9FFEFF0FAE6E6F4DCDDEFD3D4E8CACBE3C0C1DD
B8BAD6B0B1D1ABACCFA4A7CB0025B7ffffffffffffffffff003BC82760D4376BD73669D6
3467D63465D53263D32F60D12C5BCF2857CB2553C9224FC51E4BC21A46BF1842BD143DBA
123BB70731B6001BB5ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
