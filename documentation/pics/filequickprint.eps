%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/filequickprint.eps)
%%CreationDate: (Tue Oct 14 10:59:51 2008)
%%BoundingBox: 0 0 48 48
%%HiResBoundingBox: 0 0 48.0079 48
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 48 48
userdict begin
DisplayImage
0 0
48.0079 48.0079
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffBABAC8D3D3DDD3D3DDD3D3DDD3D3DDD3D3DD
D3D3DDD3D3DDD9CBBACAA567F19900EF9500EC9000E98C00ffffffffffffffffffffffff
ffffffffffffffffffffffffD3D3DCFFFFFFFFFFFFFFFFFFFFFFFFFCFCFDF8FAFCF5F7FB
F6BD41F7C711F7CC0FF6CA0FEEA005E98D01ffffffffffffffffffffffffffffffffffff
ffffffffffffCFCFD9FFFFFFFFFFFFFFFFFFFBFCFDF7F9FCF3F7FAEFEFE9F6AD13FEFB1D
FEFA1CFDF51BEB9502E68800ffffffffffffffffffffffffffffffffffffffffffffffff
CCCCD5FFFFFFFFFFFFFBFCFDF7F9FCF3F7FAEFF4F9EFD193F8C816FDF71CFDF71CF5C910
EA9302ffffffffffffffffffffffffffffffffffffffffffffffffffffffC9C9D1FFFFFF
FCFCFDF7FAFCF3F7FAEFF4F9EAF1F7F3B32DFBE617FDF41BFDF21BEC9803E78900ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffC5C5CDFCFDFDF7FAFCF3F7FA
EFF4F9EAF1F7E8E5D9F4AF15FCF11AFCF01AF7D112EB9402ffffffffffffffffffffffff
ffffffffffffffffffffffffffffff464646C0C0C8F8FBFCF3F7FAEFF4F9EAF1F7E6EEF6
ECC77BF8CA12FCED19FCED19EEA306E88D01E78D02E48802DF7D00ffffffffffffffffff
484848444444747477B3B3B8BEBEC5F4F8FBEFF4F9EAF1F7E6EEF6E2E9F2F3AA1CF6BF0E
F6C60EF6CB10FBE918FBE918F9DF16E08503DE7A00ffffffffffff848489CCCCD5DEDEE6
E1E1E9CCCCCFAFB4BFE2EBF6DCE7F4D8E4F3D4DFEFD1DAE5DBC090D9B987E6A845EDB111
FBE617FBE517E89F14D1AD826F6F71ffffff4A4A4ADEDEE5E5E5ECE5E5ECE5E5ECBABCBF
BDD8F1C4DDF3C4DDF3C5DDF3C5DDF4C6DEF4C6DEF4C6DEF4E8A022F8D714FAE217F0BD12
DC9A3ED2D3DDC7C7D028282879797CE9E9EFE9E9EFE9E9EFE9E9EF8EA7C0AADCFDAADCFD
AADCFDA3D8FC93D2FC84CBFC76C6FB91B8BDE6A717FADF16F7D313E38F1496B29FC6CBD6
D5D5E03D3D3DA8A8ADEDEDF1EDEDF1EBEBEFE1E1E8609CD078C8FE6AC3FE3AAFFD1EA4FD
1EA4FD1EA4FD1EA4FDBB9B3FF5C910F9DB15E89B08E28609E08710DD810EDA9C58626265
A6A6ABF1F1F4EEEEF2E5E5EBE7E7EC4A98E438A4FF018AFF008AFF008AFF008AFF008AFF
208BDDE89206E6AC13EDB30FF9D814F9D714F5CC12DE8514E5DCD9757577727279B2B2C6
C7C7D4E2E2E8EEEEF02B80EF006FFF006FFF006FFF006FFF006FFF006FFF2274DA517AA7
797D7ADA9B18F8D413F8D313E18F12C9AB94B1B1C55B5B5E74747AB6B6C8B6B6C8B6B6C8
B7B7C9C3C3D2C1C8DBB9C8E2AAC0E298B6E17EA8E083AAE09CB9E1AEC3E2D1A96EF0B30C
F7D112E9A610CE924CB6B6C8B6B6C857575A6B6B6FC1C1D1C1C1D1C1C1D17A7A8276767E
76767E76767E76767E76767E76767E76767E76767E76767ED28919F4C410F2BD0ED47F13
C2BECAC1C1D1BFBFCF4848485D5D5FCDCDDACDCDDAC7C7D25454556E6E6E939393939393
939393939393939393939393939393959390E08B0BF5C710D982087C6955CDCDDACDCDDA
BFBFCB4141414F4F4FC7C7CEDCDCE5D3D3DA9D9DA0CDCDD0DCDCDCDADADBD7D7DAD6D6D8
D5D5D7D3D3D6D1D1D5D4BEA2E79B13E79C11CB9C62A6A6A9DBDBE4DCDCE5B0B0B6222222
ffffff949497DADAE1E3E3EBC7C7D5FCFCFDF7F7F9F4F4F7F2F2F5F0F0F4EDEDF2EBEBF0
E9E9EEE6B672E79306E19430F1F1F3BFBFCAE3E3EBD6D6DE7E7E81000000ffffff242424
3C3C3C5F5F61C8C8D2F9F9FBF4F4F7F2F2F5F0F0F4EDEDF2EBEBF0E9E9EEE6E6EDE5992B
E28509DFD4CEEBEBF19E9EA75454563131310D0D0Dffffffffffffffffffffffff9393A9
EFEFF3F5F5F8F4F4F6F2F2F5EFEFF4EDEDF2ECECF0E9E9EFE7E5E7E28406E2C19AE1E1E9
E1E1E9D4D4D9303039ffffffffffffffffffffffffffffffffffff9A9AACD6D6DFD6D6DF
D6D6DFD4D4DDD2D2DACFCFD7CDCDD5CACAD2C9C6CACFAF8BC3C3CAC0C0C7BEBEC4BABAC1
4C4C56ffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
