%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/player_play_all.eps)
%%CreationDate: (Tue Oct 14 10:59:56 2008)
%%BoundingBox: 0 0 38 38
%%HiResBoundingBox: 0 0 38.4004 38
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 38 38
userdict begin
DisplayImage
0 0
38.4004 38.4004
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff4548454A4A48000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffff6667648284806D6E6B494940
ffffffffffffffffffffffffffffffffffff5A5B58E2E4E18C8D8B353531000000ffffff
ffffffffffffffffffffffffffffffffffff737370F0F2EFB4B5B2464646ffffffffffff
ffffffffffffffffffffffff5A5B58E9EBE7ECEDEAD1D1D0737570222222000000ffffff
ffffffffffffffffffffffff737370EEF0ECB6B7B4464646ffffffffffffffffffffffff
ffffffffffff5A5B58E9EBE8E9EBE7E9EBE7EAECE9BEBFBD5B5D590C0C0C000000ffffff
ffffffffffff737370EEEFECB6B7B4464646ffffffffffffffffffffffffffffffffffff
5D5F5BE9EBE8E9EBE7E9EBE7E9EBE7EAECE8E7E8E5A3A4A04B4B4B151515ffffffffffff
737370EFF0EDB7B8B6464646ffffffffffffffffffffffffffffffffffff60625FEAECE9
EBECE9EBEDE9EBEDEAEBEDEAEBEDE9EDEFEBDEE0DD898C88484848494949737471EFF1EE
B4B5B3464646ffffffffffffffffffffffffffffffffffff676766EDEFEDEFF0EDEEF0ED
EDEFEBEBEDE9E9EBE7E7E9E5E4E7E2E9EBE7CDCECC767774747571EFF0EDB1B2B0464646
ffffffffffffffffffffffffffffffffffff6E706DEBECEAE7E9E5E9EBE7EAECE8EAECE8
EAECE8E9EBE7E8EBE6ECEDEBC5C6C4787A767C7E7AF3F4F3B6B7B54D4D4Dffffffffffff
ffffffffffffffffffffffff797A77EEEFECEDEFECF0F1EFF2F3F1F3F4F2F3F4F2F6F6F5
DBDBDA919390888888999999868783F8F8F7BDBEBC595959ffffffffffffffffffffffff
ffffffffffff838581EFF0EFF0F1EFF4F5F3F7F8F7FCFCFCEDEEEDABABAA959595D1D1D1
ffffffffffff90928EFBFBFBC4C5C3666666ffffffffffffffffffffffffffffffffffff
8C8D88EEEFEDEEEFECF2F3F1F2F2F1C5C5C3969694FFFFFFFFFFFFffffffffffffffffff
9A9B97FAFBF9C7C9C6737973ffffffffffffffffffffffffffffffffffff8F918DEDEEEB
EFF0EED5D6D49A9C98DFDFDFFFFFFFffffffffffffffffffffffffffffffA2A39FF6F6F5
CACCC9808680ffffffffffffffffffffffffffffffffffff949691E2E3E1A6A8A3BEBEB9
FFFFFFffffffffffffffffffffffffffffffffffffffffffAAADA7F6F7F6CED0CC8C938C
ffffffffffffffffffffffffffffffffffffAEAEABA6ACA6FFFFFFFFFFFFffffffffffff
ffffffffffffffffffffffffffffffffffffADAEA7B7B9B3AFB0AA9F9F95ffffffffffff
ffffffffffffffffffffffffFFFFFFFFFFFFffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
