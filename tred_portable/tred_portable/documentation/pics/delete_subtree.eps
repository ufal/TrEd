%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/delete_subtree.eps)
%%CreationDate: (Tue Oct 14 10:59:48 2008)
%%BoundingBox: 0 0 26 26
%%HiResBoundingBox: 0 0 25.6002 26
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 26 26
userdict begin
DisplayImage
0 0
25.6002 25.6002
12.000000
22 22
0
0
ffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000ffffffffffff800000800000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000ffffffffffff
8000008900008C0000860C0CB3B3B3ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000ffffff8C0000DE0000
C90000912727B3B3B3ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff8000007200001A00000000006A00008B0000FE0000980101A58080
B3B3B3B3B3B3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff880000AF00009400007E0000780000BA0000EE00008C0A0AB3B3B3B3B3B3B3B3B3
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000840000
E40000FE0000F90000D80000F10000C800008807079535359F6D6DB1AAAAB3B3B3ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff8300008A0000870000
A40000D90000FF0000FF0000F00000CD0000A406068B0D0DAEA2A2B3B3B3ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff800000840000CC0000
E100008E0505B50505DD0000F500008D0505A99292B3B3B3ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffAA0000870000F80000AB05056D3C3C
874E4E9224248D0C0C983B3BB3B3B3B3B3B3B3B3B3ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff810000A50000FA00008906066E6B6B6D6864C59C78
D19C6CC4A38AB4B2B1B3B3B3B3B3B3ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff800000AD0101B90202932A2AACA29ACB9461D5C061D6D061D5B563
D19C6CB3B3B3B3B3B3B3B3B3ffffffffffffffffffffffffffffffffffffffffffffffff
ffffff8B0000912626942D2DAFA4A4CBA07BD5C161D6D661D6D661D6D661D4A465BBAB9F
B3B3B3B3B3B3B3B3B3ffffffffffffffffffffffffffffffffffffffffffffffffB3B3B3
B3B3B3B3B3B3B3B3B3D29B6AD6D161D6D661D6D661D6D661D5B762C6A287B3B3B3B3B3B3
B3B3B3ffffffffffffffffffffffffffffffffffffffffffB3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3C5A288D5B763D6D661D6D661D6D661D49D66B6B0ABB3B3B3B3B3B3B3B3B3B3B3B3
ffffffffffffffffffffffffffffffffffffB3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B4B1AF
D19C6CD4A865D6B962D49F66CAA27CB3B3B3B3B3B3B3B3B3B3B3B3B3B3B3ffffffffffff
ffffffffffffffffffB3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3BCAA9E
C6A286B6B0ABB3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3ffffffffffffffffff
ffffffB3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3ffffffffffffffffffB3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3ffffffffffffB3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3
end
%%PageTrailer
%%Trailer
%%EOF
