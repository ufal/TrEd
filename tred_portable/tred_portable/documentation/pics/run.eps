%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (documentation/pics/run.eps)
%%CreationDate: (Mon Jul 27 13:29:27 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffff185BBF175BBFffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff195DC0156DC80D96DB1563C31658BD1456BB1454BB1352B91252B9
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1A5FC1
195EC1185CBF0794EB00E1FF08AEE61079CD1166C302CFF60999DC1251B8ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff1A5FC1108ED80F8DD71663C3
04BFF300DFFF02D8FD0AC4F60BC6F709CDF902CDF60E62C0104DB60E4BB50E4AB4ffffff
ffffffffffffffffffffffffffffffffffff195EC100C5FF00D9FF00D9FF00D9FF149CEA
2770D82A72D52C75D6307BDA348CE420ABEE0C85D40791DA0A63C10C47B2ffffffffffff
ffffffffffffffffffffffff1261D00075FF00C6FF00D3FF1499EA2B79D83181D43181D4
3181D43181D43181D4398BDE3CA0EC0EC9FC049EE20B46B1ffffffffffffffffffffffff
ffffff185BBF175BBF086CE700CCFF00CCFF2977DB3997DD3793DB3792DB3894DC3997DD
3A98DE3A98DE3D9AE149A8F0139CE40A44B0ffffffffffffffffffffffffffffff1468C7
0B8FDE089CE600C6FF0AB1F63186DF3FA6E4ffffffffffffffffff3FA6E441AAE642AFE7
42AFE746AFEA42B7F7057BD20841AE073FACffffffffffff1759BE0F74D200C0FF00C0FF
00C0FF03BBFD2F7BDFffffffffffffffffffffffffffffffffffff49C0EF4BC5F14BC5F1
57BEF518BFFD02A7F0055EC0063CABffffff1658BD0B71DE00A7FF00B9FF00B9FF00B9FF
2A8CE73887E4ffffffffffffffffffffffffffffffffffff53DAF954DCFA58D5FA33BEFD
00B9FF0292E5053BAAffffff1557BC0E5FD10075FF0075FF009CFF00B3FF0EA8F83D8DE6
ffffffffffffffffffffffffffffffffffff58E7FF58E7FF5CDFFE35BDFE00B3FF0445BA
043AA9ffffffffffff1357BF0C64D4086CE0008BFF00ADFF00ADFF259EF3469AEBffffff
ffffffffffffffffffffffffffffff58E7FF62D9FF30BAFF0190EA0439A90337A8ffffff
ffffffffffff1252B91150B80583E800A6FF00A6FF00A6FF25A2F64FA6F055ADF2ffffff
ffffffffffffffffff61DBFF5EC9FF07A8FF00A6FF017CDE023EAD0235A6ffffffffffff
ffffff104EB60585E800A0FF00A0FF00A0FF00A0FF0AA1FD37AAF856B6F762BFF967C5FC
6BCAFE4BBDFF0EA5FF00A0FF00A0FF00A0FF015DC70134A5ffffffffffffffffff0D61C4
00A5FF0099FF0099FF00A0FF0099FF0099FF0099FF0099FF13A0FE1AA4FF0099FF0099FF
0099FF0099FF00AEFF00ADFF0046B6ffffffffffffffffff0F4CB50A71CC00C3FF00A8FF
00AEFF00C3FF00BEFF00A2FF0095FF0095FF0095FF0095FF0095FF0095FF0095FF0097F9
00B1F40068C60032A4ffffffffffffffffffffffff0E4AB3059EE202B8F0095FBF0677CD
01CAFA00D3FF0095FF0095FF0095FF00A2FF00B2FF00A2FF0095FF007DE90033A50032A4
ffffffffffffffffffffffffffffff0D48B20C46B10B45B00A44B00942AF084BB301C2F0
0095FF0095FF0095FF00DCFF00E0FF00D7FF009AFF0095FF003EAFffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff073EAC038FD500B2FF00A3FF
026DD90338A80176C800E1FF00C9FF0061C60032A4ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff063DAB038FD500E1FF00CCF40343AE0337A7
0134A600A0DD0074C60032A4ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff053BAA0446B00363BE0257B80236A7ffffff0033A50032A4
0032A4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff0337A70236A7ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
