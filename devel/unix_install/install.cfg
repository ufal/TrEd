# -*- cperl -*-

=head1 Configuration script for automated installation of TrEd dependencies 

This file contains configuration for the ./install script in this
directory.  It lists modules to install. Each module is specified by
its filename without version number and extension. The files are
expected to be found in the same directory as this file and the
install script.

This configuration defines dependencies for TrEd.

To install the modules, run ./install in this directory.

See ./install --help for more information.

=head1 AUTHOR

Petr Pajas <pajas@matfyz.cz>

Copyright (c) 2005 Petr Pajas, All rights reserved.

=cut

#     XML-LibXML-Common-

sub perl_modules {
  qw(
     Test-Simple-
     File-Which-
     Text-Iconv-
     Tie-IxHash-
     Tk-
     Syntax-Highlight-Perl-
     Tk-CodeText-
     IO-Compress-Base-
     Compress-Raw-Zlib-
     IO-Compress-Zlib-
     Compress-Zlib-
     XML-NamespaceSupport-
     XML-SAX-Base-
     XML-SAX-
     XML-LibXML-
     XML-LibXSLT-
     XML-CompactTree-
     XML-CompactTree-XS-
     XML-NodeFilter-
     XML-LibXML-Iterator-
     XML-Filter-BufferText-
     XML-SAX-Writer-
     XML-Writer-
     XML-JHXML-
     Text-Balanced-
     Parse-RecDescent-
     Graph-
     Graph-ChuLiuEdmonds-
     PerlIO-gzip-
     Archive-Zip-
     Tk-MatchEntry-
     IO-String-
    )
}

sub package_real_module {
  (
   'IO-Compress-Zlib-' => 'IO-Compress-Deflate-',
  )
}

sub c_modules {
  qw(libxml2- libxslt-)
}

sub ignore_module_build_fail {
  (
    'XML-JHXML-' => 1,
  )
}

sub force_build {
  (
   'XML-LibXML-Common-' => ['libxml2-'],
   'XML-LibXML-' => { 'libxml2-' =>
		      sub {
                        $_[0] eq `perl -MXML::LibXML -e "print XML::LibXML::LIBXML_DOTTED_VERSION"` ? 0 : 1
		      },
		    },
   'XML-LibXSLT-' => { 'libxslt-' =>
		      sub {
                        $_[0] eq `perl -MXML::LibXSLT -e "print XML::LibXSLT::LIBXSLT_DOTTED_VERSION"` ? 0 : 1
		      },
		    },
#   'libxslt-' => '--with-libxml-prefix="'.$C_PREFIX.'"'
  )
}

sub module_build_flags {
  if ($^O eq 'darwin') {
    my ($sdk) =
      map { $_->[0] }
      sort { $b->[1]<=>$a->[1] or $b->[2]<=>$a->[2] }
      map { /MacOSX(\d+)\.(\d+)/ ? [$_,$1,$2] : [$_,0,0] }
      grep { -d $_ }
      glob("/Developer/SDKs/MacOSX*.sdk");
    if ($sdk) {
      $extra_opts=" X11INC=$sdk/usr/X11R6/include";
    }
  }
  (
   'Tk-' => 'XFT=1'.$extra_opts,
   'XML-LibXML-' => 'SKIP_SAX_INSTALL=1',
#   'libxslt-' => '--with-libxml-prefix="'.$C_PREFIX.'"'
  )
}

sub module_build_input {
  (
   'XML-SAX-' => 'echo Y', # answer a XML::SAX::Base Makefile.PL question
  )
}

sub patches {
  (
   # Fix Tk on newest Xlib (MouseWheel binding)

   'Tk-' => ['tk-mousewheel.patch', 'Tk-clipboard.patch'],

   # Don't fail when can't modify global site Perl SAX configuration

   'XML-LibXML-' => 'XML-LibXML-Makefile.patch',
  )
}

sub no_test {
  'Tk-' => 1,
  # 'XML-SAX-Writer-' => 1
}

=head1 NOTE

This configuration file contains a code able to fetch the latest
libxml2 and libxslt sources from the gnome-xml project homepage.
To do that, issue:

  perl -e "require q(./install.cfg); fetch_latest_libxml2()"

and

  perl -e "require q(./install.cfg); fetch_latest_libxslt()"

=cut


sub fetch_latest_libxml2 {
  my $ftp = "ftp://xmlsoft.org/libxml2/";
  my $listing=`wget -qO- $ftp`;
  my ($latest) = $listing=~/>LATEST_LIBXML2_IS_([^>]*)</;
  print "Latest version if $latest\n";
  if ($latest ne "") {
    if (-f "libxml2-$latest.tar.gz") {
      print "We already have the latest: libxml2-$latest.tar.gz\n";
    } else {
      print "Fetching libxml2-${latest}.tar.gz\n";
      system("wget","${ftp}libxml2-${latest}.tar.gz");
    }
  } else {
    print "Couldn't determine the latest libxml2 version\n";
  }
}

sub fetch_latest_libxslt {
  my $ftp = "ftp://xmlsoft.org/libxslt/";
  my $listing=`wget -qO- $ftp`;
  my ($latest) = $listing=~/>LATEST_LIBXSLT_IS_([^>]*)</;
  print "Latest version if $latest\n";
  if ($latest ne "") {
    if (-f "libxslt-$latest.tar.gz") {
      print "We already have the latest: libxslt-$latest.tar.gz\n";
    } else {
      print "Fetching libxslt-${latest}.tar.gz\n";
      system("wget","${ftp}libxslt-${latest}.tar.gz");
    }
  } else {
    print "Couldn't determine the latest libxslt version\n";
  }
}

1;
